import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.exceptions import BotBlocked
from os import getenv
from sys import exit

bot_token = getenv("BOT_TOKEN")
if not bot_token:
    exit("Error: no token provided")

bot = Bot(token=bot_token)

dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)


# @dp.message_handler(commands="start")
# async def cmd_start(message: types.Message):
#     keyboard = types.ReplyKeyboardMarkup()
#     button_1 = types.KeyboardButton(text="–° –ø—é—Ä–µ—à–∫–æ–π")
#     keyboard.add(button_1)
#     button_2 = "–ë–µ–∑ –ø—é—Ä–µ—à–∫–∏"
#     keyboard.add(button_2)
#     await message.answer("–ö–∞–∫ –ø–æ–¥–∞–≤–∞—Ç—å –∫–æ—Ç–ª–µ—Ç—ã?", reply_markup=keyboard)


@dp.message_handler(commands="start")
async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–° –ø—é—Ä–µ—à–∫–æ–π", "–ë–µ–∑ –ø—é—Ä–µ—à–∫–∏"]
    keyboard.add(*buttons)
    await message.answer("–ö–∞–∫ –ø–æ–¥–∞–≤–∞—Ç—å –∫–æ—Ç–ª–µ—Ç—ã?", reply_markup=keyboard)


@dp.message_handler(commands="test1")
async def cmd_test1(message: types.Message):
    await message.reply("Test 1")


@dp.message_handler(commands="answer")
async def cmd_answer(message: types.Message):
    await message.answer("–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")


@dp.message_handler(commands="reply")
async def cmd_reply(message: types.Message):
    await message.reply('–≠—Ç–æ –æ—Ç–≤–µ—Ç —Å "–æ—Ç–≤–µ—Ç–æ–º"')


@dp.message_handler(commands="dice")
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)


@dp.errors_handler(exception=BotBlocked)
async def error_bot_blocked(update: types.Update, exception: BotBlocked):
    print(f"–ú–µ–Ω—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n–°–æ–æ–±—â–µ–Ω–∏–µ: {update}\n–û—à–∏–±–∫–∞: {exception}")
    return True


